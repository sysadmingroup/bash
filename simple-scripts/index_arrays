#!/usr/bin/env bash #this makes the script portable
# set -n 
# set -x
# set -e 

# Author: Doctype Human

# Date: 22.03.21

# Purpose: Showcasing simple index arrays

# License: GNU GENERAL PUBLIC LICENSE. VERSION 3, 2007

clear

#This is going to be a basic informative script

#echo " Index Arrays are a set of values that can be stored into one variable"
#echo ""
#sleep 2
#echo " They are called as index arrays since each value in assigned an index value in the form of an integer"
#echo ""
#sleep 2
#echo " Please read the script to see further details or explanation"
#echo ""
#sleep 2
simple_array=(one two three four five) #Declaring a simple array

echo "We have assigned these values to the array: ${simple_array[@]}" 	#Print all the values of the array


echo "This is the first value of the array: ${simple_array}" 		# Printing the first value of the array

#echo "This is the last value of the array: ${simple_array[-1]}"	#Printing the last value of the array

echo "These are the values from index value 1: ${simple_array[@]:1}" #Print all values of the array from the first index value

echo "These are three values from index value 1: ${simple_array[@]:1:3}" #Print three values from the first index value

echo "These are all the index values of the arary: ${!simple_array[@]}" #Print all index values of the array

echo "This is the length of the array: ${#simple_array[@]}" 	#Print the length of the array

custom_index=([11]=1 [22]=2 [33]=3 [44]=4 [55]=5)		#Declaring an array with custom index values

echo " We have created a new array with custom index values"

echo " The values of this array are: ${custom_index[@]}"	 #Print all the values of the array

echo " The index values of this array are: ${!custom_index[@]}" #Print index values of the array 

declare -a another_custom					# Declaring an index array with declare -a 

another_custom=([123]=this [1231]=array [42323]=has [111]=been [90]=declared [88]=differently) 

echo " We have declared a new array with custom index values. The value of the array are: ${another_custom[@]}"

echo " I think you can rearrage the values of the index to make the array seem like a sentence"

echo " The index values of this array are: ${!another_custom[@]}" 

echo ""

sleep 1

echo " Now we are going to see how we can take a user's input and store them in an array"

read -p " Enter your array values: " -a user_array

echo " The values that you have entered are ${user_array[@]} and are stored in an array called user_array"

echo ""

echo " Adding and Removing values from an array"

echo " This was the first array that we created: ${simple_array[@]}"

echo " We are going to add some values first to it"

simple_array+=(six seven eight nine ten) 	#Adding values to an array

echo " Now the values of the array are: ${simple_array[@]}"

echo " And the index values are: ${!simple_array[@]}"

echo " Let's remove some values from it"

unset simple_array[2]				# removing a value from an array by removing the index value
unset simple_array[4]
unset simple_array[6]

echo " Now the values of the array are ${simple_array[@]}"

echo " Removing values from an array can be tricky since you have to remove the index values, so be careful"

echo " Finally we are going to see how to store a command ouput in an array"

echo " We will store the ouput of the Date command i.e $(date) in an array called date_array"

echo " Remember that when an output of a command is stored in an array, the output will absorb the properties of an array"

date_array=($(date))				#storing output of a command in an array by using double brackets

echo "${date_array}"

echo "${date_array[@]}"

echo "${!date_array[@]}"




